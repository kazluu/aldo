# Packaging Aldo CLI App for Arch Linux

## Current Situation
I have a working Python CLI application called "Aldo" that tracks work hours and generates invoices. The app works well when run directly from the source code, but I want to:

1. Make it installable as a proper system command
2. Package it for the Arch Linux package manager (pacman/AUR)

## Specific Requirements

### 1. Set up the Python project for installation
- Structure the project properly with setup.py or pyproject.toml
- Configure the app to install as a command-line executable named `aldo`
- Ensure all dependencies are correctly specified
- Make sure configuration files are stored in appropriate system locations

### 2. Create an Arch Linux package (PKGBUILD)
- Create a proper PKGBUILD file for Arch's packaging system
- Define all necessary dependencies
- Set up proper installation paths following Arch conventions
- Include appropriate metadata (description, version, maintainer info)

### 3. Package submission to AUR
- Prepare the package for submission to the Arch User Repository (AUR)
- Define steps to publish and maintain the package

## Technical Information
- Python app name: Aldo
- Main function: Track work hours and generate invoices
- Current project structure: [Briefly describe your current folder structure]
- Dependencies: [List your main Python dependencies]
- Configuration: App currently stores data in [describe current location]

## Desired Outcome
After implementing these changes, I should be able to:
1. Install the app on any Arch system using `yay -S aldo` or similar
2. Run the app from anywhere by simply typing `aldo [command]`
3. Have configuration data stored in standard system locations
4. Easily update the package when new versions are released

## Local Testing Process
Please include a detailed process for testing the package locally before submission to AUR:
1. How to build and install the package locally
2. How to verify the installation is correct
3. How to test that the command works as expected from anywhere in the system
4. How to validate that configuration files and data are stored in the correct locations
5. Any recommended tools or commands for debugging packaging issues